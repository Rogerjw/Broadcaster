{"version":3,"sources":["../../server/controllers/users.controller.js"],"names":["UsersController","req","res","schema","Joi","object","id","number","min","required","firstname","string","lastname","email","password","PhoneNumber","username","result","validate","body","error","status","send","details","message","user","User","users","push","genToken","jwt","sign","token","data","loggedUser","find","isPasswordCorrect","usersController"],"mappings":"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","sourcesContent":["import User from '../models/user.model';\r\nimport { users } from '../models/data';\r\nimport Joi from '@hapi/joi';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nclass UsersController{\r\n   \r\n    createUser (req, res){\r\n      const schema =  Joi.object({\r\n        id: Joi.number().min(16).required(),\r\n        firstname: Joi.string().min(4).required(),\r\n        lastname: Joi.string().min(4).required(),\r\n        email: Joi.string().min(6).required().email(),\r\n        password: Joi.string().min(3).required(),\r\n        PhoneNumber: Joi.number().min(10).required(),\r\n        username: Joi.string().min(3).required()\r\n        });\r\n        const result = schema.validate(req.body);\r\n        if(result.error){\r\n          res.status(400).send(result.error.details[0].message);\r\n          return;\r\n        }\r\n        const user = new User(\r\n          req.body.id,\r\n          req.body.firstname,\r\n          req.body.lastname,\r\n          req.body.email,\r\n          req.body.password,\r\n          req.body.PhoneNumber,\r\n          req.body.username\r\n        );\r\n       users.push(user);\r\n       const genToken = jwt.sign({ email: user.email},'jwtPrivateKey');\r\n       return res.status(201).send({\r\n        status: 201,\r\n        message: 'User created successfully',\r\n        token:genToken,\r\n         data: {\r\n          id : user.id,\r\n          firstname : user.firstname,\r\n          lastname : user.lastname,\r\n          email : user.email,\r\n          password : user.password,\r\n          PhoneNumber : user.PhoneNumber,\r\n          username : user.username,\r\n        }\r\n       })\r\n      };\r\n    loginUser(req,res){\r\n        const schema =  Joi.object({\r\n          email: Joi.string().min(6).required().email(),\r\n          password: Joi.string().min(5).required()\r\n        });\r\n        const result = schema.validate(req.body);\r\n        if(result.error){\r\n          res.status(400).send(result.error.details[0].message);\r\n          return;\r\n        }\r\n        const loggedUser = users.find((user) => user.email === req.body.email);\r\n        const isPasswordCorrect=()=>{\r\n          if(req.body.password === loggedUser.password) return true;\r\n        }\r\n        if (loggedUser && isPasswordCorrect()) {\r\n          const genToken = jwt.sign({ email: loggedUser.email},'jwtPrivateKey');\r\n          return res.status(200).send({\r\n            status: 200,\r\n            message: 'User is successfully logged in',\r\n            token: genToken,\r\n            data: {\r\n              id : loggedUser.id,\r\n              firstname : loggedUser.firstname,\r\n              lastname : loggedUser.lastname,\r\n              email : loggedUser.email,\r\n              PhoneNumber : loggedUser.PhoneNumber,\r\n              username : loggedUser.username,\r\n            },\r\n          });\r\n        }\r\n        return res.status(404).send({\r\n          status: 404,\r\n          message: 'incorrect email or password',\r\n        });\r\n      }\r\n     \r\n      \r\n}\r\nconst usersController = new UsersController();\r\nexport default usersController;"],"file":"users.controller.js"}